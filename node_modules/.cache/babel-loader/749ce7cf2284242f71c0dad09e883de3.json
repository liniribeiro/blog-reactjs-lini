{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\alini\\\\Documents\\\\repository\\\\blog-reactjs-lini\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _asyncToGenerator from\"C:\\\\Users\\\\alini\\\\Documents\\\\repository\\\\blog-reactjs-lini\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\alini\\\\Documents\\\\repository\\\\blog-reactjs-lini\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useCallback}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var sendRasaPost=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(message,sendMessage){var requestOptions,response,data,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:message,sender:123})};_context.prev=1;_context.next=4;return fetch('https://kiki-assistant.herokuapp.com/webhooks/rest/webhook',requestOptions);case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;_context.next=10;return new Promise(function(resolve){return setTimeout(resolve,3000);});case 10:console.log(data[0]);for(i=0;i<data.length;i++){sendMessage({message:data[i].text,event:'bot'});}_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[1,14]]);}));return function sendRasaPost(_x,_x2){return _ref.apply(this,arguments);};}();var WidgetMessage=function WidgetMessage(_ref2){var sendMessage=_ref2.sendMessage;// Recebe o objeto e o método que altera o valor do objeto\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];// useCallback cacheia a função e se atualiza quando os elementos\n// passados na última propriedade, alteram de estado.\nvar submitMessage=useCallback(function(){sendMessage({message:message,event:'user'});sendRasaPost(message,sendMessage);setMessage('');},[message,sendMessage]);var handleChange=useCallback(function(event){var received_message=event.target.value;setMessage(received_message);},[]);var handleKeyPress=useCallback(function(event){if(event.key==='Enter'){submitMessage();}},[submitMessage]);return/*#__PURE__*/_jsxs(\"nav\",{className:\"navbar navbar-expand-md keypad\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"navbar-left\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"usrInput\",name:\"received_message\",id:\"userInput\",autoComplete:\"off\",placeholder:\"Escreva uma mensagem...\",onChange:handleChange,onKeyPress:handleKeyPress,value:message})}),/*#__PURE__*/_jsx(\"div\",{className:\"send_button\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"navbar-nav ml-auto\",children:/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"i\",{onClick:submitMessage,className:\"fa fa-paper-plane\"})})})})]});};export default WidgetMessage;","map":{"version":3,"sources":["C:/Users/alini/Documents/repository/blog-reactjs-lini/src/components/chatbot-widget/messages-input.js"],"names":["React","useState","useCallback","sendRasaPost","message","sendMessage","requestOptions","method","headers","body","JSON","stringify","sender","fetch","response","json","data","Promise","resolve","setTimeout","console","log","i","length","text","event","error","WidgetMessage","setMessage","submitMessage","handleChange","received_message","target","value","handleKeyPress","key"],"mappings":"ocAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,C,wFAEA,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,OAAP,CAAgBC,WAAhB,qJACXC,cADW,CACM,CACrBC,MAAM,CAAE,MADa,CAErBC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFY,CAGrBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,OAAO,CAAGA,OAAZ,CAAqBQ,MAAM,CAAE,GAA7B,CAAf,CAHe,CADN,uCAQQC,CAAAA,KAAK,CAAC,4DAAD,CAA+DP,cAA/D,CARb,QAQTQ,QARS,qCASIA,CAAAA,QAAQ,CAACC,IAAT,EATJ,QASTC,IATS,sCAWT,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,QAAaC,CAAAA,UAAU,CAACD,OAAD,CAAU,IAAV,CAAvB,EAAZ,CAXS,SAafE,OAAO,CAACC,GAAR,CAAYL,IAAI,CAAC,CAAD,CAAhB,EACA,IAASM,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGN,IAAI,CAACO,MAAzB,CAAiCD,CAAC,EAAlC,CAAsC,CACpCjB,WAAW,CAAC,CACVD,OAAO,CAAEY,IAAI,CAACM,CAAD,CAAJ,CAAQE,IADP,CAEVC,KAAK,CAAE,KAFG,CAAD,CAAX,CAID,CAnBc,iFAsBfL,OAAO,CAACM,KAAR,cAtBe,qEAAH,kBAAZvB,CAAAA,YAAY,gDAAlB,CA0BA,GAAMwB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,OAAmB,IAAjBtB,CAAAA,WAAiB,OAAjBA,WAAiB,CACrC;AACA,cAA8BJ,QAAQ,CAAC,EAAD,CAAtC,wCAAOG,OAAP,eAAgBwB,UAAhB,eAEA;AACA;AACA,GAAMC,CAAAA,aAAa,CAAG3B,WAAW,CAAC,UAAM,CACtCG,WAAW,CAAC,CACVD,OAAO,CAAEA,OADC,CAEVqB,KAAK,CAAE,MAFG,CAAD,CAAX,CAKAtB,YAAY,CAACC,OAAD,CAAUC,WAAV,CAAZ,CAEAuB,UAAU,CAAC,EAAD,CAAV,CACD,CATgC,CAS9B,CAACxB,OAAD,CAAUC,WAAV,CAT8B,CAAjC,CAYA,GAAMyB,CAAAA,YAAY,CAAG5B,WAAW,CAAC,SAACuB,KAAD,CAAW,CAC1C,GAAMM,CAAAA,gBAAgB,CAAGN,KAAK,CAACO,MAAN,CAAaC,KAAtC,CACAL,UAAU,CAACG,gBAAD,CAAV,CACD,CAH+B,CAG7B,EAH6B,CAAhC,CAMA,GAAMG,CAAAA,cAAc,CAAGhC,WAAW,CAAC,SAACuB,KAAD,CAAW,CAC5C,GAAGA,KAAK,CAACU,GAAN,GAAc,OAAjB,CAAyB,CACvBN,aAAa,GACd,CACF,CAJiC,CAI/B,CAACA,aAAD,CAJ+B,CAAlC,CAMA,mBACE,aAAK,SAAS,CAAC,gCAAf,wBACE,YAAK,SAAS,CAAC,aAAf,uBACE,cACI,IAAI,CAAC,MADT,CAEI,SAAS,CAAC,UAFd,CAGI,IAAI,CAAC,kBAHT,CAII,EAAE,CAAC,WAJP,CAKI,YAAY,CAAC,KALjB,CAMI,WAAW,CAAC,yBANhB,CAOI,QAAQ,CAAEC,YAPd,CAQI,UAAU,CAAEI,cARhB,CASI,KAAK,CAAE9B,OATX,EADF,EADF,cAaE,YAAK,SAAS,CAAC,aAAf,uBACE,WAAI,SAAS,CAAC,oBAAd,uBACI,WAAI,SAAS,CAAC,UAAd,uBACE,UACA,OAAO,CAAEyB,aADT,CAEA,SAAS,CAAC,mBAFV,EADF,EADJ,EADF,EAbF,GADF,CA0BD,CAxDH,CA2DA,cAAeF,CAAAA,aAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nconst sendRasaPost = async (message, sendMessage) => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message:  message, sender: 123 })\n    };\n  \n    try {\n      const response = await fetch('https://kiki-assistant.herokuapp.com/webhooks/rest/webhook', requestOptions);\n      const data = await response.json();  \n  \n      await new Promise((resolve) => setTimeout(resolve, 3000));\n  \n      console.log(data[0])\n      for (var i = 0; i < data.length; i++) {\n        sendMessage({\n          message: data[i].text,\n          event: 'bot'\n        })\n      }\n  \n    } catch (error) {\n      console.error(error)\n    }\n  }\n\nconst WidgetMessage = ({sendMessage}) => {\n    // Recebe o objeto e o método que altera o valor do objeto\n    const [message, setMessage] = useState('')\n  \n    // useCallback cacheia a função e se atualiza quando os elementos\n    // passados na última propriedade, alteram de estado.\n    const submitMessage = useCallback(() => {\n      sendMessage({ \n        message: message,\n        event: 'user'\n      })\n  \n      sendRasaPost(message, sendMessage)\n  \n      setMessage('') \n    }, [message, sendMessage]);\n  \n  \n    const handleChange = useCallback((event) => {\n      const received_message = event.target.value\n      setMessage(received_message)\n    }, [])\n  \n  \n    const handleKeyPress = useCallback((event) => {\n      if(event.key === 'Enter'){\n        submitMessage()\n      }\n    }, [submitMessage])\n  \n    return (\n      <nav className=\"navbar navbar-expand-md keypad\">\n        <div className=\"navbar-left\">\n          <input\n              type=\"text\"\n              className=\"usrInput\"\n              name=\"received_message\"\n              id=\"userInput\"\n              autoComplete=\"off\"\n              placeholder=\"Escreva uma mensagem...\"\n              onChange={handleChange} \n              onKeyPress={handleKeyPress} \n              value={message}/>\n        </div>\n        <div className=\"send_button\">\n          <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <i \n                onClick={submitMessage}\n                className=\"fa fa-paper-plane\">\n                </i>\n              </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n  \n\nexport default WidgetMessage"]},"metadata":{},"sourceType":"module"}