{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alini\\\\Documents\\\\repository\\\\blog-reactjs-lini\\\\src\\\\components\\\\main-chatbot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport messenderImg from '../assets/img/chatbot/messenger.png';\nimport '../assets/css/bot-style.css';\nimport Widget from './chatbot-widget/widget'; // const USERID_STORAGE_KEY = \"simple-chatroom-cid\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FloatChatButton = props => {\n  const {\n    isToggled,\n    onClick\n  } = props;\n  let widget_class = isToggled ? \"profile_div isToggled\" : \"profile_div isNotToggled\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: widget_class,\n    id: \"profile_div\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"imgProfile\",\n      src: messenderImg,\n      alt: \"\",\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FloatChatButton;\n\nconst MainChatbot = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [widgetToggled, setwidgetToggled] = useState(false);\n  const changeToggle = useCallback(() => {\n    setwidgetToggled(!widgetToggled);\n  }, [widgetToggled]);\n\n  const sendMessage = message => {\n    setMessages(messages => [...messages, message]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Widget, {\n      isToggled: widgetToggled,\n      onClose: changeToggle,\n      sendMessage: sendMessage,\n      chatMessages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FloatChatButton, {\n      isToggled: !widgetToggled,\n      onClick: changeToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainChatbot, \"3phGWgociMN1C0uQd9ktYnljvlk=\");\n\n_c2 = MainChatbot;\nexport default MainChatbot; // essionUserId = window.sessionStorage.getItem(USERID_STORAGE_KEY);\n// isNewSession = sessionUserId == null;\n//   if (isNewSession) {\n//     sessionUserId = \"1234\";\n//     window.sessionStorage.setItem(USERID_STORAGE_KEY, sessionUserId);\n//   }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FloatChatButton\");\n$RefreshReg$(_c2, \"MainChatbot\");","map":{"version":3,"sources":["C:/Users/alini/Documents/repository/blog-reactjs-lini/src/components/main-chatbot.js"],"names":["React","useState","useCallback","messenderImg","Widget","FloatChatButton","props","isToggled","onClick","widget_class","MainChatbot","messages","setMessages","widgetToggled","setwidgetToggled","changeToggle","sendMessage","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAO,6BAAP;AAEA,OAAOC,MAAP,MAAmB,yBAAnB,C,CAIA;;;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAuBF,KAA7B;AAEA,MAAIG,YAAY,GAAGF,SAAS,GAAG,uBAAH,GAA6B,0BAAzD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEE,YAAhB;AAA8B,IAAA,EAAE,EAAC,aAAjC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAEN,YAAjC;AAA+C,MAAA,GAAG,EAAC,EAAnD;AAAsD,MAAA,OAAO,EAAEK;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVD;;KAAMH,e;;AAaN,MAAMK,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;AAGA,QAAMc,YAAY,GAAGb,WAAW,CAAC,MAAM;AACrCY,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAF+B,EAE7B,CAACA,aAAD,CAF6B,CAAhC;;AAIA,QAAMG,WAAW,GAAIC,OAAD,IAAa;AAC/BL,IAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcM,OAAd,CAAb,CAAX;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACA,QAAC,MAAD;AACE,MAAA,SAAS,EAAEJ,aADb;AAEE,MAAA,OAAO,EAAEE,YAFX;AAGE,MAAA,WAAW,EAAEC,WAHf;AAIE,MAAA,YAAY,EAAEL;AAJhB;AAAA;AAAA;AAAA;AAAA,YADA,eAQA,QAAC,eAAD;AACA,MAAA,SAAS,EAAE,CAACE,aADZ;AAEA,MAAA,OAAO,EAAEE;AAFT;AAAA;AAAA;AAAA;AAAA,YARA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3BD;;GAAML,W;;MAAAA,W;AA6BN,eAAeA,WAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useCallback } from 'react';\r\n\r\nimport messenderImg from '../assets/img/chatbot/messenger.png'\r\nimport '../assets/css/bot-style.css'\r\n\r\nimport Widget from './chatbot-widget/widget'\r\n\r\n\r\n\r\n// const USERID_STORAGE_KEY = \"simple-chatroom-cid\";\r\n\r\n\r\nconst FloatChatButton = (props) => {\r\n  const {isToggled, onClick} = props\r\n\r\n  let widget_class = isToggled ? \"profile_div isToggled\" : \"profile_div isNotToggled\";\r\n\r\n  return (\r\n    <div className={widget_class} id=\"profile_div\">\r\n      <img className=\"imgProfile\" src={messenderImg} alt='' onClick={onClick}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst MainChatbot = () => {\r\n  const [messages, setMessages] = useState([])\r\n  const [widgetToggled, setwidgetToggled] = useState(false)\r\n\r\n\r\n  const changeToggle = useCallback(() => {\r\n    setwidgetToggled(!widgetToggled)\r\n  }, [widgetToggled])\r\n\r\n  const sendMessage = (message) => {\r\n    setMessages(messages => [...messages, message])\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">         \r\n    <Widget \r\n      isToggled={widgetToggled}\r\n      onClose={changeToggle}\r\n      sendMessage={sendMessage}\r\n      chatMessages={messages}\r\n    />\r\n\r\n    <FloatChatButton \r\n    isToggled={!widgetToggled} \r\n    onClick={changeToggle}/>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default MainChatbot\r\n\r\n\r\n\r\n// essionUserId = window.sessionStorage.getItem(USERID_STORAGE_KEY);\r\n// isNewSession = sessionUserId == null;\r\n//   if (isNewSession) {\r\n//     sessionUserId = \"1234\";\r\n//     window.sessionStorage.setItem(USERID_STORAGE_KEY, sessionUserId);\r\n//   }"]},"metadata":{},"sourceType":"module"}