{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\alini\\\\Documents\\\\repository\\\\blog-reactjs-lini\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _slicedToArray from\"C:\\\\Users\\\\alini\\\\Documents\\\\repository\\\\blog-reactjs-lini\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState,useCallback}from'react';import messenderImg from'../assets/img/chatbot/messenger.png';import'../assets/css/bot-style.css';import Widget from'./chatbot-widget/widget';// const USERID_STORAGE_KEY = \"simple-chatroom-cid\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FloatChatButton=function FloatChatButton(props){var isToggled=props.isToggled,onClick=props.onClick;var widget_class=isToggled?\"profile_div isToggled\":\"profile_div isNotToggled\";return/*#__PURE__*/_jsx(\"div\",{className:widget_class,id:\"profile_div\",children:/*#__PURE__*/_jsx(\"img\",{className:\"imgProfile\",src:messenderImg,alt:\"\",onClick:onClick})});};var MainChatbot=function MainChatbot(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),widgetToggled=_useState4[0],setwidgetToggled=_useState4[1];var changeToggle=useCallback(function(){setwidgetToggled(!widgetToggled);},[widgetToggled]);var sendMessage=function sendMessage(message){setMessages(function(messages){return[].concat(_toConsumableArray(messages),[message]);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Widget,{isToggled:widgetToggled,onClose:changeToggle,sendMessage:sendMessage,chatMessages:messages}),/*#__PURE__*/_jsx(FloatChatButton,{isToggled:!widgetToggled,onClick:changeToggle})]});};export default MainChatbot;// essionUserId = window.sessionStorage.getItem(USERID_STORAGE_KEY);\n// isNewSession = sessionUserId == null;\n//   if (isNewSession) {\n//     sessionUserId = \"1234\";\n//     window.sessionStorage.setItem(USERID_STORAGE_KEY, sessionUserId);\n//   }","map":{"version":3,"sources":["C:/Users/alini/Documents/repository/blog-reactjs-lini/src/components/main-chatbot.js"],"names":["React","useState","useCallback","messenderImg","Widget","FloatChatButton","props","isToggled","onClick","widget_class","MainChatbot","messages","setMessages","widgetToggled","setwidgetToggled","changeToggle","sendMessage","message"],"mappings":"oTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CAEA,MAAOC,CAAAA,YAAP,KAAyB,qCAAzB,CACA,MAAO,6BAAP,CAEA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CAIA;wFAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,GAAOC,CAAAA,SAAP,CAA6BD,KAA7B,CAAOC,SAAP,CAAkBC,OAAlB,CAA6BF,KAA7B,CAAkBE,OAAlB,CAEA,GAAIC,CAAAA,YAAY,CAAGF,SAAS,CAAG,uBAAH,CAA6B,0BAAzD,CAEA,mBACE,YAAK,SAAS,CAAEE,YAAhB,CAA8B,EAAE,CAAC,aAAjC,uBACE,YAAK,SAAS,CAAC,YAAf,CAA4B,GAAG,CAAEN,YAAjC,CAA+C,GAAG,CAAC,EAAnD,CAAsD,OAAO,CAAEK,OAA/D,EADF,EADF,CAKD,CAVD,CAaA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,cAAgCT,QAAQ,CAAC,EAAD,CAAxC,wCAAOU,QAAP,eAAiBC,WAAjB,eACA,eAA0CX,QAAQ,CAAC,KAAD,CAAlD,yCAAOY,aAAP,eAAsBC,gBAAtB,eAGA,GAAMC,CAAAA,YAAY,CAAGb,WAAW,CAAC,UAAM,CACrCY,gBAAgB,CAAC,CAACD,aAAF,CAAhB,CACD,CAF+B,CAE7B,CAACA,aAAD,CAF6B,CAAhC,CAIA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAa,CAC/BL,WAAW,CAAC,SAAAD,QAAQ,qCAAQA,QAAR,GAAkBM,OAAlB,IAAT,CAAX,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACA,KAAC,MAAD,EACE,SAAS,CAAEJ,aADb,CAEE,OAAO,CAAEE,YAFX,CAGE,WAAW,CAAEC,WAHf,CAIE,YAAY,CAAEL,QAJhB,EADA,cAQA,KAAC,eAAD,EACA,SAAS,CAAE,CAACE,aADZ,CAEA,OAAO,CAAEE,YAFT,EARA,GADF,CAcD,CA3BD,CA6BA,cAAeL,CAAAA,WAAf,CAIA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nimport messenderImg from '../assets/img/chatbot/messenger.png'\nimport '../assets/css/bot-style.css'\n\nimport Widget from './chatbot-widget/widget'\n\n\n\n// const USERID_STORAGE_KEY = \"simple-chatroom-cid\";\n\n\nconst FloatChatButton = (props) => {\n  const {isToggled, onClick} = props\n\n  let widget_class = isToggled ? \"profile_div isToggled\" : \"profile_div isNotToggled\";\n\n  return (\n    <div className={widget_class} id=\"profile_div\">\n      <img className=\"imgProfile\" src={messenderImg} alt='' onClick={onClick}/>\n    </div>\n  )\n}\n\n\nconst MainChatbot = () => {\n  const [messages, setMessages] = useState([])\n  const [widgetToggled, setwidgetToggled] = useState(false)\n\n\n  const changeToggle = useCallback(() => {\n    setwidgetToggled(!widgetToggled)\n  }, [widgetToggled])\n\n  const sendMessage = (message) => {\n    setMessages(messages => [...messages, message])\n  }\n\n  return (\n    <div className=\"container\">         \n    <Widget \n      isToggled={widgetToggled}\n      onClose={changeToggle}\n      sendMessage={sendMessage}\n      chatMessages={messages}\n    />\n\n    <FloatChatButton \n    isToggled={!widgetToggled} \n    onClick={changeToggle}/>\n    </div> \n  )\n}\n\nexport default MainChatbot\n\n\n\n// essionUserId = window.sessionStorage.getItem(USERID_STORAGE_KEY);\n// isNewSession = sessionUserId == null;\n//   if (isNewSession) {\n//     sessionUserId = \"1234\";\n//     window.sessionStorage.setItem(USERID_STORAGE_KEY, sessionUserId);\n//   }"]},"metadata":{},"sourceType":"module"}